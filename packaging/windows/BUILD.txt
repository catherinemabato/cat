How to make a darktable windows installer (64 bit Intel only):

1). Install MSYS2 (instructions and prerequisites can be found on official website: https://msys2.github.io/).
    
    Install x64 developer toolchain from the MSYS2 prompt:
    $ pacman -S mingw-w64-x86_64-toolchain
    
    Install required dependencies:
    $ pacman -S mingw-w64-x86_64-{exiv2,lcms2,lensfun,libglade,dbus-glib,libusb-compat,openexr,sqlite3,libxslt,libsoup,libwebp,libsecret,lua,graphicsmagick,openjpeg2,gtk-engines,gtk3,pugixml,sdl,libexif}
    
    For osm-gps-map:
    $ pacman -S mingw-w64-x86_64-{python2-cairo,python2-pygtk,osm-gps-map}

    For gphoto2:
    $ pacman -S mingw-w64-x86_64-{libusb,popt,libgphoto2}

    For Saxon:
    $ pacman -S unzip perl-Locale-Gettext perl-TermReadKey perl-sgmls

    For other gtk libraries:
    $ pacman -S mingw-w64-x86_64-{atkmm, glibmm, cairomm, gtkmm3, gtksourceview3}


    Install SAXON:
    https://sourceforge.net/projects/saxon/files/Saxon-HE/
    copy files into /usr/share/java/saxon/

    Install DocBook Extension to Saxon 
    https://sourceforge.net/projects/docbook/files/docbook-xsl-saxon/1.00/
    copy files to /usr/share/java/docbook-xsl-saxon

    Install PO4A:
    https://alioth.debian.org/frs/?group_id=30267
    Extract and copy to your home folder
    $ perl Build.PL
    $ ./Build
    $ ./Build install

    Modify your bash_profile file in your HOME directory
    #added as per http://wiki.gimp.org/wiki/Hacking:Building/Windows
    export PREFIX="/mingw64"
    export PATH="$PREFIX/bin:$PATH"

    JAVA_HOME="/C/Program Files (x86)/Java/jre1.8.0_101"
    export PATH=$JAVA_HOME/bin:$PATH

    CHECK THIS!
    export PKG_CONFIG_PATH="$PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH"
    export LD_LIBRARY_PATH="$PREFIX/lib:$LD_LIBRARY_PATH"

    #Update your CLASSPATH
    CLASSPATH=$CLASSPATH:/usr/share/java/saxon/saxon9he.jar:/usr/share/java/docbook-xsl-saxon/saxon653.jar
    export CLASSPATH
    
    # export location of libraries for LIBGPHOTO
    export CAMLIBS=/mingw64/lib/libgphoto2/2.5.10
    export IOLIBS=/mingw64/lib/libgphoto2_port/0.12.0

    execute the following command to actviate  profile changes 
    $. .bash_profile

    Clone darktable git repository (in this example into ~/src):
        $ mkdir ~/src
        $ cd ~/src
        $ git clone git://github.com/darktable-org/darktable.git
    
    Finally build and install darktable:
        $ mkdir darktablebuild
        $ cd darktablebuild
        $ cmake -G "MSYS Makefiles" -DCMAKE_BUILD_TYPE=Debug -DPROJECT_VERSION=2.0.6 -DCMAKE_INSTALL_PREFIX=/opt/darktable ../darktable
        $ cmake --build .
        $ cmake --build . --target install

        //OLD
        $ cd darktable
        $ ../build.sh --build-type Release --build-generator 'MSYS Makefiles'
        $ ./build.sh --build-dir ../darktablebuild --build-type Release --build-generator 'MSYS Makefiles' --skip-build
        $ cmake --build ../darktablebuild
        $ cmake --build ../darktablebuild --target install
        $ make
        After this darktable will be installed in /opt/darktable directory and can be started by typing /opt/darktable/bin/darktable.exe in MSYS2 MINGW64 terminal.

        debug:  gdb --args /opt/darktable/bin/darktable.exe  --library "C:/Development/library.db"
2). Download, patch and install gtk-bundle for Windows and install it
    https://github.com/tschoonj/GTK-for-Windows-Runtime-Environment-Installer
    Pls note: need to run the installer as admin to run the cache generation

    $ gdk-pixbuf-query-loaders --update-cache 

3). Now preparation is done, run image creating script, it should create darktable-<VERSION>.msi in current (packaging/windows) directory:
     $ cd ~/src/darktable/packaging/windows
     $ ./make-windows-installer

ISSUES - FIXED
    * darktablerc config file  is being generated with Windows style line endings ( CRLF \r\n) , and file reading functions are expecting a UNIX style line ending (only CR \n)
    same problem with strip_semicolons_from_keymap function 
    * Reading system parameters (memory/CPU) at init - done
    * Finding OpenCL library - done
    * Replacing OpenCL symlinks with a filename/MD5tag combination
    * Loading libraries / finding plugin library
    * Removing ws2_32 and msvcrt as not needed
    * Added LUA (needs a special old, 5.2 version of the package)
    * Added SLIDESHOW
    * Added OPENMAP Support
    * Added LIBGPHOTO (camera support)
    * Addes statvfs for Windows
    * Added getrlimit/setrlimit using https://msdn.microsoft.com/ko-kr/library/ms811896.aspx#ucmgch09_topic9
    * Added dt_print_mem_usage for Windows

TODO LIST
    lua select() replacement in function read_cb
    ADD COLORD or find a way to replace it
    lensfun database should be deployed to Appdata/local/lensfun (no version_1 subfolder), alternatively under darktable/share
    right alignment of views at the toolbar
    OpenCL64.dll!!!