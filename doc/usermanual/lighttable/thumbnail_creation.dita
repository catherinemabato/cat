<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"topic.dtd">
<topic id="thumbnail_creation" xml:lang="en-us">
  <title>Thumbnail creation</title>
  <body>
    <p>Thumbnails get created whenever darktable imports an image for the first time, after an image has been modified in the darkroom, or when revisiting an 
    <q>old</q>image whose thumbnail is no longer available.</p>
    <p>When darktable imports an image for the first time, there are two possible sources from where to take a thumbnail. darktable can either try to extract an embedded thumbnail out of the input image – most raw files contain these kind of thumbnails generated by the camera – or process the image by itself using default settings. You can define how darktable gets its thumbnails in the GUI preferences dialog (see 
    <xref href="../preferences/gui_options.dita#gui_options" type="topic">GUI options</xref>).</p>
    <p>Extracting an embedded thumbnail from the input image has the advantage of being very fast. However, those thumbnails have been generated by the raw converter of the camera and do not represent darktable's 
    <q>view</q>of that image. You will notice the difference as soon as you open the image in the darkroom mode, after which darktable replaces the embedded thumbnail with its own one.</p>
    <p>After importing a new film roll darktable generates thumbnails for new images as they are needed. In the case of a larger set of new images this slows down navigation in the lighttable view as with each move new thumbnails might need to be produced. Alternatively you may terminate darktable and start the 
    <filepath>darktable-generate-cache</filepath>binary. This program will generate all missing thumbnails in one go. For more details see 
    <xref href="../overview/darktable_generate_cache_binary.dita" type="topic">darktable-generate-cache binary</xref>.</p>
    <p>As the thumbnail cache file has a pre-defined maximum size it will eventually get filled up. Then if new thumbnails are added, old ones need to be dropped. However, darktable will keep all thumbnails on disk if the corresponding disk backend option is activated in the core preferences dialog (see 
    <xref href="../preferences/core_options.dita#core_options" type="topic">Core options</xref>). Access to the thumbnails in this secondary cache is slower than to the ones in the primary cache, but still much faster than reprocessing thumbnails from scratch. The size of the secondary cache is only limited by disk space.</p>
    <p>Thumbnails never get dropped from the secondary cache. In case you want to clean it up you can do so manually by deleting all images recursively in folder 
    <filepath>$HOME/.cache/darktable/mipmaps-xyz.d</filepath>where 
    <filepath>xyz</filepath>denotes an alphanumeric identifier of the cache. Afterwards you let darktable re-generate thumbnails as needed, or you generate all thumbnails in one go with 
    <filepath>darktable-generate-cache</filepath>.</p>
    <p>If you don't activate the disk backend and select a too small cache size you might observe adverse effects. Continuous regeneration of thumbnails whenever you move in your collection, flickering of thumbnail images, or even darktable becoming unresponsive are typical symptoms. A good choice of the cache size is 512MB or higher. Please mind that the inherent limits of 
    <i>32-bit systems</i>will force you to go for a much lower cache size (see 
    <xref href="../topics/darktable_and_memory.dita#darktable_and_memory" type="topic">darktable and memory</xref>for more details on these limitations).</p>
    <p>Starting with darktable 2.0 thumbnails are fully color managed if the corresponding option is activated in the core preferences dialog (see 
    <xref href="../preferences/core_options.dita#core_options" type="topic">Core options</xref>). Colors are rendered accurately on screen as long as your system is properly set up to hand over the right monitor profile to darktable. For more information on color management see 
    <xref href="../darkroom/color_management.dita#color_management" type="topic">Color management</xref>.</p>
  </body>
</topic>
