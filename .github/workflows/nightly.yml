name: Nightly PKG

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
  push:
    branches:
    - macos_nightly_macports

jobs:
  Win64:
    if: github.repository == 'darktable-org/darktable'
    name: Nightly darktable.${{ github.sha }}.win64
    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix:
        btype: [Release]
        compiler: 
          - { compiler: GNU,  CC: gcc,   CXX: g++ }
        eco: [-DBINARY_PACKAGE_BUILD=ON]
        target: [skiptest]
    defaults:
      run:
        shell: msys2 {0}
    env:
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
      SRC_DIR: ${{ github.workspace }}/src
      BUILD_DIR: ${{ github.workspace }}/build
      INSTALL_PREFIX: ${{ github.workspace }}/install
      ECO: ${{ matrix.eco }}
      CMAKE_BUILD_TYPE: ${{ matrix.btype }}
      GENERATOR: 'MSYS Makefiles'
      TARGET: ${{ matrix.target }}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: >-
            pacman-mirrors
            bash
            curl
            git
            base-devel
            intltool
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-clang
            mingw-w64-x86_64-openmp
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-cmocka
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-libxml2
            mingw-w64-x86_64-pugixml
            mingw-w64-x86_64-libjpeg-turbo
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-exiv2
            mingw-w64-x86_64-lcms2
            mingw-w64-x86_64-lensfun
            mingw-w64-x86_64-dbus-glib
            mingw-w64-x86_64-openexr
            mingw-w64-x86_64-sqlite3
            mingw-w64-x86_64-libxslt
            mingw-w64-x86_64-libsoup
            mingw-w64-x86_64-libavif
            mingw-w64-x86_64-libwebp
            mingw-w64-x86_64-libsecret
            mingw-w64-x86_64-lua
            mingw-w64-x86_64-graphicsmagick
            mingw-w64-x86_64-openjpeg2
            mingw-w64-x86_64-gtk3
            mingw-w64-x86_64-pugixml
            mingw-w64-x86_64-libexif
            mingw-w64-x86_64-osm-gps-map
            mingw-w64-x86_64-libgphoto2
            mingw-w64-x86_64-drmingw
            mingw-w64-x86_64-gettext
            mingw-w64-x86_64-python3
            mingw-w64-x86_64-iso-codes
            mingw-w64-x86_64-python3-jsonschema
            mingw-w64-x86_64-python3-six
            mingw-w64-x86_64-python3-setuptools
            mingw-w64-x86_64-gmic
            mingw-w64-x86_64-nsis
          update: true
      - uses: actions/checkout@v2
        with:
          submodules: true
          path: src
      - name: Build and Install
        run: |
          cmake -E make_directory "${BUILD_DIR}"
          cmake -E make_directory "${INSTALL_PREFIX}"
          $(cygpath ${SRC_DIR})/.ci/ci-script.sh
      - name: Check if it runs
        run: |
          $(cygpath ${INSTALL_PREFIX})/bin/darktable.exe --version || true
          $(cygpath ${INSTALL_PREFIX})/bin/darktable-cli.exe \
                 --width 2048 --height 2048 \
                 --hq true --apply-custom-presets false \
                 $(cygpath ${SRC_DIR})/src/tests/integration/images/mire1.cr2 \
                 $(cygpath ${SRC_DIR})/src/tests/integration/0000-nop/nop.xmp \
                 output.png \
                 --core --disable-opencl --conf host_memory_limit=8192 \
                 --conf worker_threads=4 -t 4 \
                 --conf plugins/lighttable/export/force_lcms2=FALSE \
                 --conf plugins/lighttable/export/iccintent=0
      - name: Package
        if: ${{ success() && matrix.btype == 'Release' && matrix.target == 'skiptest' }}
        run: |
          lensfun-update-data
          cd "${BUILD_DIR}"
          cmake --build "${BUILD_DIR}" --target package
      - name: Package upload
        if: ${{ success() && matrix.btype == 'Release' && matrix.target == 'skiptest' }}
        uses: 'actions/upload-artifact@v2'
        with:
          name: darktable.${{ github.sha }}.win64.zip
          path: ${{ env.BUILD_DIR }}/darktable-*.exe
          retention-days: 2
  
  macOS:
    name: Nightly darktable.${{ github.sha }}.macOS
    runs-on: ${{ matrix.build.os }}
    strategy:
      fail-fast: true
      matrix:
        build:
          - { os: macos-10.15, xcode: 11.3.1, deployment: 10.7 }
          - { os: macos-10.15, xcode: 11.7,   deployment: 10.14 }
          - { os: macos-10.15, xcode: 12.4,   deployment: 10.15 }
          - { os: macos-11,    xcode: 12.5.1, deployment: 11.3 }
        compiler:
          - { compiler: XCode,   CC: cc, CXX: c++ }
        btype: [ RelWithDebInfo ]
        target:
          - skiptest
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.build.xcode }}.app/Contents/Developer
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
      MACOSX_DEPLOYMENT_TARGET: ${{ matrix.build.deployment }}
      CXXFLAGS: -stdlib=libc++
      OBJCXXFLAGS: -stdlib=libc++
      SRC_DIR: ${{ github.workspace }}/src
      BUILD_DIR: ${{ github.workspace }}/build
      INSTALL_PREFIX: ${{ github.workspace }}/install
      CMAKE_BUILD_TYPE: ${{ matrix.btype }}
      #GENERATOR: Ninja
      GENERATOR: Unix Makefiles
      TARGET: ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          path: src
      - name: Install MacPorts
        run: |
          curl -LO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/master/macports-ci
          source ./macports-ci install
      - name: Customize MacPorts configuration
        run: |
          echo "macosx_deployment_target ${MACOSX_DEPLOYMENT_TARGET}" | sudo tee -a /opt/local/etc/macports/macports.conf
          echo "cxx_stdlib libc++" | sudo tee -a /opt/local/etc/macports/macports.conf
          echo "+no_gnome +no_x11 +quartz -x11 -gnome -gfortran" | sudo tee -a /opt/local/etc/macports/variants.conf
      - name: Add patches (see packaging/macosx/BUILD.txt)
        run: |
          mkdir -p ~/ports/devel/gnutls/files ~/ports/lang/libomp/files ~/ports/lang/python{37,38,39}/files ~/ports/graphics/GraphicsMagick/files ~/ports/graphics/ImageMagick/files ~/ports/textproc ~/ports/science
          cp -R "$(port dir gnutls)" ~/ports/devel
          curl -Lo ~/ports/devel/gnutls/files/patch.diff https://raw.github.com/darktable-org/darktable/master/packaging/macosx/gnutls-fixes.diff
          cp -R "$(port dir python37)" ~/ports/lang
          curl -Lo ~/ports/lang/python37/files/patch.diff https://raw.github.com/darktable-org/darktable/master/packaging/macosx/python36-stack_size.diff
          cp -R "$(port dir python38)" ~/ports/lang
          curl -Lo ~/ports/lang/python38/files/patch.diff https://raw.github.com/darktable-org/darktable/master/packaging/macosx/python38-stack_size.diff
          cp -R "$(port dir python39)" ~/ports/lang
          curl -Lo ~/ports/lang/python39/files/patch.diff https://raw.github.com/darktable-org/darktable/master/packaging/macosx/python38-stack_size.diff
          cp -R "$(port dir GraphicsMagick)" ~/ports/graphics
          curl -Lo ~/ports/graphics/GraphicsMagick/files/patch.diff https://raw.github.com/darktable-org/darktable/master/packaging/macosx/gm-deployment_target.diff
          cp -R "$(port dir ImageMagick)" ~/ports/graphics
          curl -Lo ~/ports/graphics/ImageMagick/files/patch.diff https://raw.github.com/darktable-org/darktable/master/packaging/macosx/im-stdlib.diff
          cp -R "$(port dir libusb)" ~/ports/devel
          curl -Lo ~/ports/devel/libusb/files/patch.diff https://raw.github.com/darktable-org/darktable/master/packaging/macosx/libusb-no-clock_gettime.diff
          cp -R "$(port dir perl5)" ~/ports/lang
          curl -L https://raw.github.com/darktable-org/darktable/master/packaging/macosx/perl-at.patch | patch -d ~/ports -p0
          cp -R "$(port dir pugixml)" ~/ports/textproc
          curl -L https://raw.github.com/darktable-org/darktable/master/packaging/macosx/pugixml-stdlib.patch | patch -d ~/ports -p0
          cp -R "$(port dir gmic)" ~/ports/science
          curl -L https://raw.github.com/darktable-org/darktable/master/packaging/macosx/gmic-minimal.patch | patch -d ~/ports -p0
          curl -Lo ~/ports/lang/libomp/Portfile https://github.com/macports/macports-ports/raw/589fc380ea8b74771fc4ec1de607ddbddf22cb70/lang/libomp/Portfile
          curl -Lo ~/ports/lang/libomp/files/reviews.llvm.org_D88252.diff https://github.com/macports/macports-ports/raw/589fc380ea8b74771fc4ec1de607ddbddf22cb70/lang/libomp/files/reviews.llvm.org_D88252.diff
          curl -Lo ~/ports/lang/libomp/files/patch-libomp-use-gettid-on-Leopard.diff https://github.com/macports/macports-ports/raw/589fc380ea8b74771fc4ec1de607ddbddf22cb70/lang/libomp/files/patch-libomp-use-gettid-on-Leopard.diff
      - name: Patch portfiles
        run: |
          for f in ~/ports/*/*/Portfile;
          do
            echo $f;
            echo "patchfiles-append patch.diff" | tee -a $f;
          done;
          
          portindex ~/ports

          echo "$HOME/ports\n$(cat /opt/local/etc/macports/sources.conf)" | sudo tee /opt/local/etc/macports/sources.conf

          echo "Contents of sources.conf:"
          cat /opt/local/etc/macports/sources.conf
      - name: Install Base Dependencies
        run: |
          sudo port install git exiv2 libgphoto2 gtk-osx-application-gtk3 lensfun librsvg libsoup openexr json-glib flickcurl GraphicsMagick openjpeg webp libsecret pugixml osm-gps-map adwaita-icon-theme tango-icon-theme intltool iso-codes libomp gmic
          sudo port select --set python2 python27
      - name: Build and Install
          # todo: use linker which supports --wrap, ld.bfd and ld.gold support it
        run: |
          cmake -E make_directory "${BUILD_DIR}";
          cmake -E make_directory "${INSTALL_PREFIX}";
          ./src/.ci/ci-script.sh;
      - name: Check if it runs
        run: |
          ${INSTALL_PREFIX}/bin/darktable --version || true
          ${INSTALL_PREFIX}/bin/darktable-cli \
                 --width 2048 --height 2048 \
                 --hq true --apply-custom-presets false \
                 "${SRC_DIR}/src/tests/integration/images/mire1.cr2" \
                 "${SRC_DIR}/src/tests/integration/0000-nop/nop.xmp" \
                 output.png \
                 --core --disable-opencl --conf host_memory_limit=8192 \
                 --conf worker_threads=4 -t 4 \
                 --conf plugins/lighttable/export/force_lcms2=FALSE \
                 --conf plugins/lighttable/export/iccintent=0
      - name: Install and prepare mac bundler
        run: |
          cd ${SRC_DIR}
          curl -LO https://download.gnome.org/sources/gtk-mac-bundler/0.7/gtk-mac-bundler-0.7.4.tar.xz
          tar -xf gtk-mac-bundler-0.7.4.tar.xz
          cd gtk-mac-bundler-0.7.4
          patch -p1 < ${SRC_DIR}/packaging/macosx/gtk-mac-bundler-0.7.4.patch
          make install
      - name: Create DMG image
        run: |
          cd ${SRC_DIR}/packaging/macosx
          ./make-app-bundle ${SRC_DIR}/packaging/macosx/darktable.bundle
      - name: Publish artifacts
        uses: 'actions/upload-artifact@v2'
        with:
          name: darktable.${{ github.sha }}.macos
          path: ${{ env.SRC_DIR }}/*.dmg
          retention-days: 7